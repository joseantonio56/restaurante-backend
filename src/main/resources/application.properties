# =========================
# Configuración de base de datos PostgreSQL (Neon)
# =========================
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# =========================
# Configuración de JPA/Hibernate
# =========================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# =========================
# Puerto dinámico para Rendel
# =========================
server.port=${PORT:8080}

# =========================
# CORS global (si tu frontend está en otra URL)
# =========================
# Esto se puede habilitar con una clase de configuración en Java:
# @Bean
# public WebMvcConfigurer corsConfigurer() {
#     return new WebMvcConfigurer() {
#         @Override
#         public void addCorsMappings(CorsRegistry registry) {
#             registry.addMapping("/**")
#                     .allowedOrigins("*")
#                     .allowedMethods("*");
#         }
#     };
# }
